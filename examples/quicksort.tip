
quickSort(arr, low, high)
{
  var pi, _;
  if (high > low)
  {
    pi = partition(arr, low, high);
    _ = quickSort(arr, low, pi - 1);  // Before pi
    _ = quickSort(arr, pi + 1, high); // After pi
  }
  return 0;
}

partition(arr, low, high)
{
  var i, j, tempa, tempb, pivot;
  // pivot (Element to be placed at right position)
  pivot = arr[high];

  i = (low - 1); // Index of smaller element
  j = low;
  while (high > j)
  {

    // If current element is smaller than the pivot
    if (pivot > arr[j])
    {
      i = i + 1; // increment index of smaller element
      tempa = arr[i];
      arr[i] = arr[j];
      arr[j] = tempa;
    }
    j = j + 1;
  }
  tempb = arr[i + 1];
  arr[i + 1] = arr[high];
  arr[high] = tempb;

  return (i + 1);
}

main(n)
{
  var arr, i, j, _;
  //arr = [3, 2, 5, 1, 7, 4];

  i = 0;
  arr = array[n];
  while (n > i)
  {
    arr[i] = input;
    i = i + 1;
  }
  _ = quickSort(arr, 0, (len arr)-1);
  j = 0;
  while (n > j)
  {
    output arr[j];
    j = j + 1;
  }
 
  return 0;
}
